# SPDX-FileCopyrightText: 2006-2025 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2025 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Coverage

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - unlabeled
  workflow_dispatch:

concurrency:
  group: coverage-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

env:
  SHARG_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eeuxo pipefail {0}

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.compiler }}
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: false
      matrix:
        compiler: ["gcc-14"]
    container:
      image: ghcr.io/seqan/${{ matrix.compiler }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup cache
        uses: seqan/actions/setup-actions-cache@main

      - name: Configure tests
        run: |
          mkdir build && cd build
          cmake ../test/coverage -DCMAKE_BUILD_TYPE=Coverage \
                                 -DCMAKE_CXX_FLAGS="-Wno-interference-size"
          make gtest_main

      - name: Build tests
        working-directory: build
        run: |
          ccache -z
          make -k
          ccache -svvx

      - name: Run tests
        working-directory: build
        run: ctest . -j --output-on-failure

      - name: Get CodeCov token
        id: token
        run: |
          set +x
          token=$(yq '.codecov.token' .codecov.yml)
          echo "::add-mask::${token}"
          echo "token=${token}" >> "${GITHUB_OUTPUT}"

      - name: Generate coverage report
        run: |
          gcovr --root ${GITHUB_WORKSPACE}/test/coverage \
                ${GITHUB_WORKSPACE}/build \
                --filter ${GITHUB_WORKSPACE}/include \
                --filter ${GITHUB_WORKSPACE}/src \
                --exclude ${GITHUB_WORKSPACE}/include/raptor/argument_parsing/update_arguments.hpp \
                --exclude ${GITHUB_WORKSPACE}/include/raptor/argument_parsing/update_parsing.hpp \
                --exclude ${GITHUB_WORKSPACE}/include/raptor/update \
                --exclude ${GITHUB_WORKSPACE}/src/argument_parsing/update_parsing.cpp \
                --exclude ${GITHUB_WORKSPACE}/src/update \
                --exclude-lines-by-pattern '^\s*}|^\s*};|.*seqan::hibf::unreachable.*|^\s*\.[^\s]+ = \".*\"' \
                --exclude-noncode-lines \
                --exclude-throw-branches \
                --exclude-unreachable-branches \
                --merge-mode-functions separate \
                -j \
                --cobertura \
                --output ${GITHUB_WORKSPACE}/build/coverage_report.xml

      - name: Submit coverage report
        uses: codecov/codecov-action@v5.4.0
        with:
          disable_search: true
          fail_ci_if_error: false
          files: build/coverage_report.xml
          flags: stable
          plugins: noop
          token: ${{ steps.token.outputs.token }}

      - name: Generate coverage report
        run: |
          rm ${GITHUB_WORKSPACE}/build/coverage_report.xml
          gcovr --root ${GITHUB_WORKSPACE}/test/coverage \
                ${GITHUB_WORKSPACE}/build \
                --filter ${GITHUB_WORKSPACE}/include/raptor/argument_parsing/update_arguments.hpp \
                --filter ${GITHUB_WORKSPACE}/include/raptor/argument_parsing/update_parsing.hpp \
                --filter ${GITHUB_WORKSPACE}/include/raptor/update \
                --filter ${GITHUB_WORKSPACE}/src/argument_parsing/update_parsing.cpp \
                --filter ${GITHUB_WORKSPACE}/src/update \
                --exclude-lines-by-pattern '^\s*}|^\s*};|.*seqan::hibf::unreachable.*|^\s*\.[^\s]+ = \".*\"' \
                --exclude-noncode-lines \
                --exclude-throw-branches \
                --exclude-unreachable-branches \
                --merge-mode-functions separate \
                -j \
                --cobertura \
                --output ${GITHUB_WORKSPACE}/build/coverage_report.xml

      - name: Submit coverage report
        uses: codecov/codecov-action@v5.4.0
        with:
          disable_search: true
          fail_ci_if_error: false
          files: build/coverage_report.xml
          flags: experimental
          plugins: noop
          token: ${{ steps.token.outputs.token }}
